version: '2'

services:
  movies-downstream:
    image: pfidr/rclone:latest
    container_name: movies-downstream
    restart: unless-stopped
    volumes:
      - "${STORAGE_LOCATION}/radarr/movies:/destination"
      - "${CONFIG_LOCATION}/rclone:/config"
      - "${CONFIG_LOCATION}/rclone/ssh:/.ssh:ro"
      - "${CONFIG_LOCATION}/rclone/logs_movies:/tmp/"
    environment:
      SYNC_SRC: Crown:${REMOTE_STORAGE_LOCATION}/radarr/movies
      SYNC_DEST: /destination
      SYNC_OPTS: '-v --min-age ${MIN_AGE} --delete-empty-src-dirs'
      CHECK_URL: ${MOVIES_CHECK_URL}
      RCLONE_DIR_CHECK_SKIP: 'true'
      RCLONE_CMD: move
      FORCE_SYNC: ${FORCE_SYNC}
      TZ: ${DOCKER_TZ}
      CRON: '0 3 * * *'
      CRON_ABORT: '0 10 * * *'
      UID: ${PUID}
      GID: ${PGID}
    networks:
      - main

  series-downstream:
    image: pfidr/rclone:latest
    container_name: series-downstream
    restart: unless-stopped
    volumes:
      - "${STORAGE_LOCATION}/sonarr/tvseries:/destination"
      - "${CONFIG_LOCATION}/rclone:/config"
      - "${CONFIG_LOCATION}/rclone/ssh:/.ssh:ro"
      - "${CONFIG_LOCATION}/rclone/logs_series:/tmp/"
    environment:
      SYNC_SRC: Crown:${REMOTE_STORAGE_LOCATION}/sonarr/tvseries
      SYNC_DEST: /destination
      SYNC_OPTS: '-v --min-age ${MIN_AGE} --delete-empty-src-dirs'
      CHECK_URL: ${SERIES_CHECK_URL}
      RCLONE_DIR_CHECK_SKIP: 'true'
      RCLONE_CMD: move
      TZ: ${DOCKER_TZ}
      CRON: '0 3 * * *'
      CRON_ABORT: '0 10 * * *'
      UID: ${PUID}
      GID: ${PGID}
      FORCE_SYNC: ${FORCE_SYNC}
    networks:
      - main

  rclone-diskscanner:
    image: rclone/rclone:latest
    container_name: rclone-diskscanner
    command: --rcd /config --rc-user ${AUTH_USER} --rc-pass ${AUTH_PASS}
    environment:
      AUTH_USER: ${AUTH_USER}
      AUTH_PASS: ${AUTH_PASS}
      PHP_TZ: ${DOCKER_TZ}
      PUID: ${PUID}
      PGID: ${PGID}
    volumes:
      - ${STORAGE_LOCATION}/radarr/movies:/movies
      - ${STORAGE_LOCATION}/sonarr/tvseries:/tv
      - "${CONFIG_LOCATION}/rclone:/config/rclone"
      - "${CONFIG_LOCATION}/rclone/ssh:/.ssh:ro"
    labels:
      - "traefik.enable=true"
      - "traefik.port=5572"
      - "traefik.backend=rclone"
      - "traefik.docker.network=main"
      - "traefik.frontend.entryPoints=http,https"
      - "traefik.frontend.rule=Host:rclone.${DOMAIN_URL}"
      - traefik.frontend.auth.forward.address=${OAUTH_FORWARD_URL}
      - traefik.frontend.auth.forward.authResponseHeaders=X-Forwarded-User
      - traefik.frontend.auth.forward.trustForwardHeader=true


networks:
  main:
    external: true

    
